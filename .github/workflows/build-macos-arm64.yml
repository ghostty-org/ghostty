name: build-macos-arm64

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*', 'tip-*' ]
  pull_request:
  workflow_dispatch:

jobs:
  build-macos-arm64:
    name: macOS arm64 build (.app + artifact)
    runs-on: macos-15
    env:
      ZIG_VERSION: '0.14.1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 26 Beta
        run: |
          set -euxo pipefail
          sudo xcode-select -s /Applications/Xcode_26_beta_5.app

      - name: Confirm Xcode + SDK
        run: |
          set -euxo pipefail
          xcodebuild -version
          xcodebuild -showsdks
          # Ensure Xcode 26 beta and macOS 26 SDK exist (Ghostty expects this on main)
          xcodebuild -version | grep -E "Xcode 26" >/dev/null
          xcodebuild -showsdks | grep -E "macOS 26.0" >/dev/null

      - name: Install Metal Toolchain (for shaders)
        run: |
          set -euxo pipefail
          xcodebuild -downloadComponent MetalToolchain || true

      - name: Install Zig ${{ env.ZIG_VERSION }}
        uses: korandoru/setup-zig@v1
        with:
          zig-version: ${{ env.ZIG_VERSION }}

      - name: Verify Zig installation
        run: zig version

      - name: Cache Zig global package cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/zig
          key: ${{ runner.os }}-zig-cache-${{ hashFiles('build.zig.zon') }}

      - name: Cache project Zig build cache
        uses: actions/cache@v4
        with:
          path: |
            .zig-cache
            zig-cache
          key: ${{ runner.os }}-zig-proj-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-zig-proj-

      - name: Build core with Zig (ReleaseFast)
        run: |
          set -euxo pipefail
          zig build -Doptimize=ReleaseFast

      - name: Build macOS .app (arm64 only, ReleaseLocal)
        working-directory: macos
        run: |
          set -euxo pipefail
          xcodebuild \
            -configuration ReleaseLocal \
            -scheme Ghostty \
            -destination 'generic/platform=macOS,arch=arm64' \
            ONLY_ACTIVE_ARCH=YES \
            EXCLUDED_ARCHS='x86_64' \
            build

      - name: Package app
        run: |
          set -euxo pipefail
          APPDIR=$(ls -d ~/Library/Developer/Xcode/DerivedData/Ghostty-*/Build/Products/ReleaseLocal/Ghostty.app | head -n1)
          ls -la "$APPDIR"
          mkdir -p dist
          ditto -c -k --sequesterRsrc --keepParent "$APPDIR" dist/Ghostty-mac-arm64.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Ghostty-mac-arm64
          path: dist/Ghostty-mac-arm64.zip
          if-no-files-found: error

      - name: Create GitHub Release (tags only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/Ghostty-mac-arm64.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Latest Release (main branch)
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Latest Build"
          body: |
            ðŸš€ **Latest Ghostty Build**
            
            This is an automated build from the latest main branch.
            Built from commit: ${{ github.sha }}
            
            **Installation via Homebrew:**
            ```bash
            brew tap fammasmaz/ghostty
            brew install ghostty
            ```
            
            **Manual Installation:**
            Download `Ghostty-mac-arm64.zip`, extract, and move to Applications folder.
          files: dist/Ghostty-mac-arm64.zip
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
